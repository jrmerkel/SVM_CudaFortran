module unittests
    use svm
contains
    integer function test_matrix_dot_product() result (out)
        
        real, dimension(3,3) :: matrixA
        real, dimension(3) :: VecB, outVector
        integer :: n, i, j
        n = 3
        do i = 1, n 
            do j = 1, n
                matrixA(i,j) = i*3 -3 + j
            enddo
            VecB(i) = i + 1
        enddo
        call matrix_dot_product(matrixA, VecB, n, outVector)
        if(outVector(1) == 20.00000 .and. outVector(2) == 47.00000 .and. outVector(3) == 74.00000) then
            out = 1
        else
            out = 0
        endif
       
    end function

    integer function test_vect_to_matrix() result (out)
        
    real, dimension(3,3) :: outMatrix
    real, dimension(3) :: VecA
    integer :: n, i, j
    n = 3
    do i = 1, n 
        VecA(i) = i + 1
    enddo
    call vec_to_matrix(outMatrix, VecA, n)
    do i = 1, n
        if(outMatrix(i,1) == (i+1) * 2 .and. outMatrix(i,2) == (i+1) * 3 .and. outMatrix(i,3) == (i+1) * 4) then
            out = 1
        else
            out = 0
            return 
        endif
    enddo
    end function

end module

use svm
use unittests
integer :: x
x = 1
if(test_matrix_dot_product() == 0) then
    print*, "Matrix Dot Product fails"
    x=0
endif
if(test_vect_to_matrix() == 0) then 
    print*, "Vect to Matrix (np.outer)  fails"
    x = 0
endif
if(x == 1)print*,"All Tests Pass" 
end